import React, { useEffect, useState } from 'react';
import { useAppContext } from '../context/AppContext';
import { getApiBase } from '../api';

export default function CorrectionsTab() {
  const { corrections, setCorrections } = useAppContext();
  const [localCorrections, setLocalCorrections] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [saving, setSaving] = useState(false);

  // Fetch corrections on mount
  useEffect(() => {
    setLoading(true);
    fetch(`${getApiBase()}/corrections`)
      .then(res => res.json())
      .then(data => {
        setCorrections(data.corrections || []);
        setLocalCorrections(data.corrections || []);
        setLoading(false);
      })
      .catch(err => {
        setError('Failed to load corrections');
        setLoading(false);
      });
    // eslint-disable-next-line
  }, []);

  const handleChange = (idx, field, value) => {
    const updated = localCorrections.map((row, i) => i === idx ? { ...row, [field]: value } : row);
    setLocalCorrections(updated);
  };

  const handleAdd = () => {
    setLocalCorrections([
      ...localCorrections,
      { buca: '', jovie: '' }
    ]);
  };

  const handleRemove = (idx) => {
    setLocalCorrections(localCorrections.filter((_, i) => i !== idx));
  };

  const handleSave = async () => {
    setSaving(true);
    setError(null);
    try {
      const resp = await fetch(`${getApiBase()}/corrections`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ corrections: localCorrections })
      });
      const data = await resp.json();
      if (!resp.ok) throw new Error(data.error || 'Save failed');
      setCorrections(localCorrections);
    } catch (err) {
      setError(err.message);
    } finally {
      setSaving(false);
    }
  };

  return (
    <div style={{ background: 'red', color: 'white', minHeight: '100vh', padding: 16 }}>
      <h2 className="text-xl font-bold mb-4">Manage Name Corrections</h2>
      {loading ? (
        <div>Loading corrections...</div>
      ) : (
        <>
          <table className="min-w-full border mb-4">
            <thead>
              <tr className="bg-gray-100">
                <th className="p-2 border">BUCA Name</th>
                <th className="p-2 border">JOVIE Name</th>
                <th className="p-2 border">Actions</th>
              </tr>
            </thead>
            <tbody>
              {localCorrections.map((row, idx) => (
                <tr key={idx}>
                  <td className="border p-1">
                    <input
                      className="border px-2 py-1 rounded w-full"
                      value={row.buca}
                      onChange={e => handleChange(idx, 'buca', e.target.value)}
                      placeholder="BUCA name"
                    />
                  </td>
                  <td className="border p-1">
                    <input
                      className="border px-2 py-1 rounded w-full"
                      value={row.jovie}
                      onChange={e => handleChange(idx, 'jovie', e.target.value)}
                      placeholder="JOVIE name"
                    />
                  </td>
                  <td className="border p-1 text-center">
                    <button
                      className="text-red-500 hover:underline"
                      onClick={() => handleRemove(idx)}
                    >Remove</button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>

          {error && <div className="text-red-600 font-semibold mt-2">{error}</div>}
        </>
      )}
    </div>
  );
}

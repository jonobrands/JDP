{"version":3,"file":"static/js/510.8a49db8b.chunk.js","mappings":"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","sources":["utils/normalizeName.js","components/TimeCKPanel.js","store/exchangeStore.js"],"sourcesContent":["// Helper: Normalize name for matching (case/space insensitive)\nexport function normalizeName(name) {\n  return (name || \"\").trim().replace(/\\s+/g, \" \").toLowerCase();\n}\n","import React from 'react';\nimport { formatTime12hRange } from '../utils/formatting';\nimport { useExchangeStore } from '../store/exchangeStore';\nimport { normalizeName } from '../utils/normalizeName';\nimport { useTimeckStore } from '../store/timeckStore';\n\n/**\n * TimeCK - Displays a table of exact match results with the ability to clear/export.\n * \n * @param {Object} props - Component props\n * @param {Array} props.rows - Array of result rows to display\n * @param {Function} props.onClearResults - Callback function when Clear Results is clicked\n * @param {Function} props.onExport - Callback function when Export is clicked\n * @param {Function} [props.onResultEdit] - Optional callback (index, value) to persist Result edits\n * @returns {JSX.Element} The TimeCK component\n */\nfunction TimeCK({ rows = [], onClearResults, onExport, onResultEdit }) {\n  const exchange = useExchangeStore();\n  const [displayMode, setDisplayMode] = React.useState('12h'); // '12h' | '24h'\n  const editedValues = useTimeckStore(s => s.editedValues); // { [originalIndex]: saved12hString }\n  const setEditedValue = useTimeckStore(s => s.setEditedValue);\n  const clearEditedValues = useTimeckStore(s => s.clearEditedValues);\n  const clearDeviationMessages = useTimeckStore(s => s.clearDeviationMessages);\n  const setDeviationMessages = useTimeckStore(s => s.setDeviationMessages);\n  const DISPLAY_MODE_STORAGE_KEY = 'timeck_display_mode';\n\n  // Helper: select all text in a contentEditable element\n  const selectAllIn = React.useCallback((el) => {\n    try {\n      if (!el) return;\n      const range = document.createRange();\n      range.selectNodeContents(el);\n      const sel = window.getSelection();\n      if (!sel) return;\n      sel.removeAllRanges();\n      sel.addRange(range);\n    } catch {}\n  }, []);\n\n  // Load persisted display mode on mount\n  React.useEffect(() => {\n    try {\n      const saved = localStorage.getItem(DISPLAY_MODE_STORAGE_KEY);\n      if (saved === '12h' || saved === '24h') {\n        setDisplayMode(saved);\n      }\n    } catch {}\n  }, []);\n\n  // Persist display mode on change\n  React.useEffect(() => {\n    try {\n      localStorage.setItem(DISPLAY_MODE_STORAGE_KEY, displayMode);\n    } catch {}\n  }, [displayMode]);\n\n  // (moved export helpers below once exactRows/missingRows are defined)\n  // Pull latest JOVIE publish from the exchange store\n  const jovieData = exchange.getChannelData ? exchange.getChannelData('jovie') : null;\n  const jovieRows = Array.isArray(jovieData?.rows) ? jovieData.rows : [];\n  // Build multiple lookup maps for robust matching\n  const { nameMap, uidMap, mastMap, mastDateMap } = React.useMemo(() => {\n    const nameMap = new Map(); // key: norm(client)|norm(caregiver)\n    const uidMap = new Map();  // key: clientUID|caregiverUID\n    const mastMap = new Map(); // key: mast/pair uid token\n    const mastDateMap = new Map(); // key: mast|date\n    const hasTime = (x) => Boolean(x && (x.timeRange || x.time || (x.start_time && x.end_time)));\n    const extractDate = (x) => x?.date || x?.service_date || x?.SERVICE_DATE || x?.Date;\n    for (const r of jovieRows) {\n      const nameKey = `${normalizeName(r.client || '')}|${normalizeName(r.caregiver || '')}`;\n      const prevName = nameMap.get(nameKey);\n      if (!prevName || (!hasTime(prevName) && hasTime(r))) nameMap.set(nameKey, r);\n\n      const cUID = r.clientUID || r.client_uid || r.CLIENT_UID;\n      const gUID = r.caregiverUID || r.caregiver_uid || r.CAREGIVER_UID;\n      if (cUID && gUID) {\n        const uidKey = `${cUID}|${gUID}`;\n        const prevUid = uidMap.get(uidKey);\n        if (!prevUid || (!hasTime(prevUid) && hasTime(r))) uidMap.set(uidKey, r);\n      }\n\n      const mast = r.mast_uid || r.MAST_UID || r.master_uid || r.MASTER_UID || r.pair_uid || r.pairUID;\n      if (mast) {\n        const mastKey = String(mast);\n        const prevMast = mastMap.get(mastKey);\n        if (!prevMast || (!hasTime(prevMast) && hasTime(r))) mastMap.set(mastKey, r);\n        const date = extractDate(r);\n        if (date) {\n          const mdKey = `${mastKey}|${date}`;\n          const prevMd = mastDateMap.get(mdKey);\n          if (!prevMd || (!hasTime(prevMd) && hasTime(r))) mastDateMap.set(mdKey, r);\n        }\n      }\n    }\n    return { nameMap, uidMap, mastMap, mastDateMap };\n  }, [jovieRows]);\n\n  const extractMast = (row) => row?.mast_uid || row?.MAST_UID || row?.master_uid || row?.MASTER_UID || row?.pair_uid || row?.pairUID;\n  const extractClientUID = (row) => (\n    row?.clientUID || row?.clientUid || row?.client_id || row?.clientId ||\n    row?.client_uid || row?.CLIENT_UID || row?.uid_client || row?.CLIENTID || row?.CLIENT\n  );\n  const extractCaregiverUID = (row) => (\n    row?.caregiverUID || row?.caregiverUid || row?.caregiver_id || row?.caregiverId ||\n    row?.caregiver_uid || row?.CAREGIVER_UID || row?.uid_caregiver || row?.CAREGIVERID || row?.CAREGIVER\n  );\n  const expandCaregivers = (cg) => {\n    if (Array.isArray(cg)) return cg;\n    if (typeof cg === 'string') return cg.split(',').map(s => s.trim()).filter(Boolean);\n    return [cg].filter(Boolean);\n  };\n\n  // --- Time parsing and deviation analysis helpers ---\n  const toMinutes12h = (h, m, ampm) => {\n    let hh = parseInt(h, 10);\n    const mm = parseInt(m, 10) || 0;\n    const ap = (ampm || '').toLowerCase();\n    if (ap === 'pm' && hh !== 12) hh += 12;\n    if (ap === 'am' && hh === 12) hh = 0;\n    return hh * 60 + mm;\n  };\n  const parseTimeRange12h = (str) => {\n    if (!str || typeof str !== 'string') return null;\n    const re = /\\b(\\d{1,2}):(\\d{2})\\s*([ap]m)\\b\\s*[-–]\\s*\\b(\\d{1,2}):(\\d{2})\\s*([ap]m)\\b/i;\n    const m = str.match(re);\n    if (!m) return null;\n    const start = toMinutes12h(m[1], m[2], m[3]);\n    let end = toMinutes12h(m[4], m[5], m[6]);\n    // Overnight handling: if end is not after start, assume next day\n    if (end <= start) end += 24 * 60;\n    return { start, end };\n  };\n  const minutesToHhMm = (mins) => {\n    const a = Math.abs(mins);\n    const h = Math.floor(a / 60);\n    const m = a % 60;\n    if (h > 0) return `${h}h ${m}m`;\n    return `${m}m`;\n  };\n  // Flexible parser: supports 12h (with/without minutes) and 24h ranges\n  const parseTimeRangeFlexible = (str) => {\n    if (!str || typeof str !== 'string') return null;\n    const s = String(str).trim();\n    // 12h with optional minutes and optional spaces, e.g. \"10AM-4PM\", \"7 pm - 4 pm\"\n    let m = s.match(/\\b(\\d{1,2})(?::(\\d{2}))?\\s*([ap]m)\\b\\s*[-–]\\s*\\b(\\d{1,2})(?::(\\d{2}))?\\s*([ap]m)\\b/i);\n    if (m) {\n      const start = toMinutes12h(m[1], m[2] ?? '00', m[3]);\n      let end = toMinutes12h(m[4], m[5] ?? '00', m[6]);\n      if (end <= start) end += 24 * 60; // overnight\n      return { start, end };\n    }\n    // 24h HH:MM - HH:MM\n    m = s.match(/\\b(\\d{1,2}):(\\d{2})\\b\\s*[-–]\\s*\\b(\\d{1,2}):(\\d{2})\\b/);\n    if (m) {\n      const toMin24 = (h, mm) => (Math.min(23, Math.max(0, parseInt(h, 10))) * 60) + (Math.min(59, Math.max(0, parseInt(mm, 10))));\n      const start = toMin24(m[1], m[2]);\n      let end = toMin24(m[3], m[4]);\n      if (end <= start) end += 24 * 60; // overnight\n      return { start, end };\n    }\n    return null;\n  };\n\n  const analyzeDeviation = (refStr, valStr) => {\n    const ref = parseTimeRangeFlexible(refStr);\n    const val = parseTimeRangeFlexible(valStr);\n    if (!ref || !val) return { badge: '', color: '', severity: 'none' };\n    const ds = val.start - ref.start; // + late, - early\n    const de = val.end - ref.end;     // + late, - early\n    if (ds === 0 && de === 0) {\n      return { badge: 'YES', color: 'green', severity: 'ok', details: [] };\n    }\n    const parts = [];\n    if (ds < 0) parts.push(`Arrived early ${minutesToHhMm(ds)}`);\n    if (ds > 0) parts.push(`Arrived late ${minutesToHhMm(ds)}`);\n    if (de < 0) parts.push(`Left early ${minutesToHhMm(de)}`);\n    if (de > 0) parts.push(`Left late ${minutesToHhMm(de)}`);\n    const overHour = Math.abs(ds) > 60 || Math.abs(de) > 60;\n    if (overHour) {\n      return { badge: `More than hour deviation: ${parts.join(', ')}`, color: 'red', severity: 'bad', details: parts };\n    }\n    return { badge: parts.join(', '), color: 'orange', severity: 'warn', details: parts };\n  };\n\n  // --- Display formatting helpers (12h/24h) ---\n  const minutesTo24h = (mins) => {\n    const m = ((mins % (24 * 60)) + (24 * 60)) % (24 * 60);\n    const hh = Math.floor(m / 60);\n    const mm = m % 60;\n    const pad = (n) => (n < 10 ? `0${n}` : `${n}`);\n    return `${pad(hh)}:${pad(mm)}`;\n  };\n  const minutesTo12hClock = (mins) => {\n    const m = ((mins % (24 * 60)) + (24 * 60)) % (24 * 60);\n    let hh = Math.floor(m / 60);\n    const mm = m % 60;\n    const ap = hh >= 12 ? 'pm' : 'am';\n    hh = hh % 12;\n    if (hh === 0) hh = 12;\n    const pad = (n) => (n < 10 ? `0${n}` : `${n}`);\n    return `${hh}:${pad(mm)} ${ap}`;\n  };\n  const formatDisplayRange = (srcStr, mode) => {\n    const parsed = parseTimeRangeFlexible(srcStr);\n    if (!parsed) {\n      return mode === '24h' ? srcStr : formatTime12hRange(srcStr);\n    }\n    const { start, end } = parsed;\n    if (mode === '24h') {\n      return `${minutesTo24h(start)} - ${minutesTo24h(end)}`;\n    }\n    return `${minutesTo12hClock(start)} - ${minutesTo12hClock(end)}`;\n  };\n\n  const extractDate = (x) => x?.date || x?.service_date || x?.SERVICE_DATE || x?.Date;\n  const extractTimeRange = (x) => x?.timeRange || x?.time || (x?.start_time && x?.end_time ? `${x.start_time}-${x.end_time}` : undefined);\n  const getTimeFromJovie = (row) => {\n    const fallback = row.timeRange || row.time;\n    // 1) Try client+caregiver UIDs\n    const cUID = extractClientUID(row);\n    const gUID = extractCaregiverUID(row);\n    if (cUID && gUID) {\n      const u = uidMap.get(`${cUID}|${gUID}`);\n      const t = extractTimeRange(u);\n      if (t) return t;\n    }\n    // 2) Try MAST/pair UID\n    const mast = extractMast(row);\n    if (mast) {\n      const mastKey = String(mast);\n      // Prefer date-specific match when available\n      const date = extractDate(row);\n      if (date) {\n        const md = mastDateMap.get(`${mastKey}|${date}`);\n        const t = extractTimeRange(md);\n        if (t) return t;\n      }\n      const m = mastMap.get(mastKey);\n      const t = extractTimeRange(m);\n      if (t) return t;\n    }\n    // 3) Try by name (including multi-caregiver variants)\n    const clients = [row.client];\n    const caregivers = expandCaregivers(row.caregivers ?? row.caregiver);\n    for (const c of clients) {\n      for (const g of caregivers) {\n        const k = `${normalizeName(c || '')}|${normalizeName(g || '')}`;\n        const jr = nameMap.get(k);\n        const t = extractTimeRange(jr);\n        if (t) return t;\n      }\n    }\n    if (!fallback) {\n      // Surface helpful diagnostics once per row-key\n      const mast = extractMast(row);\n      // eslint-disable-next-line no-console\n      console.warn('[TimeCK] No JOVIE time found', {\n        client: row.client, caregiver: row.caregiver, date: extractDate(row), mast,\n      });\n    }\n    return fallback;\n  };\n\n  // Debug explainMatch previously used by the UID Debug panel has been removed.\n  // Only show exact matches (100% confidence or tag === 'exact_match')\n  const exactRows = rows.filter(row => (\n    row.tag === 'exact_match' || \n    row.match_type === 'Exact Match' || \n    row.confidence === 1 || \n    row.confidence === 1.0\n  ));\n  // Heuristic for missing/mismatch items\n  const missingRows = rows.filter(row => (\n    row.tag === 'mismatch' ||\n    row.match_type === 'Mismatch' ||\n    row.match_type === 'Missing' ||\n    row.source === 'BUCA only' ||\n    row.source === 'JOVIE only'\n  ));\n  const [showMissing, setShowMissing] = React.useState(false);\n\n  // Prepare export datasets for Exact and Missing (now that exactRows/missingRows exist)\n  const buildExportRows = React.useCallback(() => {\n    const getSavedValue = (row) => {\n      const originalIndex = rows.indexOf(row);\n      return (originalIndex in editedValues ? editedValues[originalIndex] : undefined) || row.result || row.timeChecked || '';\n    };\n    const exact = exactRows.map((row) => {\n      const jovie = formatTime12hRange(getTimeFromJovie(row)) || '';\n      const result = getSavedValue(row);\n      const originalIndex = rows.indexOf(row);\n      const a = analyzeDeviation(jovie, result);\n      return {\n        Pair: row.pair || row.uid || row.UID || '',\n        Client: row.client || '',\n        Caregiver: row.caregiver || '',\n        Date: row.date || '',\n        JOVIE_Time: jovie,\n        Result_Time: result,\n        Deviation: (deviationMessageMap && deviationMessageMap[originalIndex]) || a.badge || a.message || '',\n      };\n    });\n    const missing = missingRows.map((row) => ({\n      Pair: row.pair || row.uid || row.UID || '',\n      Client: row.client || '',\n      Caregiver: row.caregiver || '',\n      Date: row.date || '',\n      JOVIE_Time: formatTime12hRange(getTimeFromJovie(row)) || '',\n    }));\n    return { exact, missing };\n  }, [editedValues, rows, exactRows, missingRows]);\n\n  // Publish deviation messages for Recon to consume (after exactRows is defined)\n  const deviationMessageMap = React.useMemo(() => {\n    try {\n      const map = {};\n      if (!Array.isArray(exactRows)) return map;\n      for (const row of exactRows) {\n        const originalIndex = rows.indexOf(row);\n        if (originalIndex < 0) continue;\n        const currentValue = (originalIndex in editedValues ? editedValues[originalIndex] : undefined) || row.result || row.timeChecked || '';\n        const refTimeStr = formatTime12hRange(getTimeFromJovie(row)) || '';\n        const a = analyzeDeviation(refTimeStr, currentValue) || {};\n        map[originalIndex] = a.badge || '';\n      }\n      return map;\n    } catch {\n      return {};\n    }\n  }, [exactRows, rows, editedValues]);\n\n  React.useEffect(() => {\n    try { setDeviationMessages(deviationMessageMap); } catch {}\n  }, [deviationMessageMap, setDeviationMessages]);\n\n  const downloadCSV = (filename, rowsArr) => {\n    if (!rowsArr.length) return;\n    const headers = Object.keys(rowsArr[0]);\n    const esc = (v) => {\n      if (v == null) return '';\n      const s = String(v);\n      if (/[\",\\n]/.test(s)) return '\"' + s.replace(/\"/g, '\"\"') + '\"';\n      return s;\n    };\n    const csv = [headers.join(','), ...rowsArr.map(r => headers.map(h => esc(r[h])).join(','))].join('\\n');\n    const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const handleExport = async () => {\n    const { exact, missing } = buildExportRows();\n    // Try colored Excel using xlsx-populate (supports styling)\n    try {\n      const xpMod = await import('xlsx-populate/browser/xlsx-populate');\n      const XlsxPopulate = xpMod && xpMod.default ? xpMod.default : xpMod;\n      const wb = await XlsxPopulate.fromBlankAsync();\n\n      // Ensure sheets\n      let sheetExact = wb.sheet('Exact') || wb.addSheet('Exact');\n      let sheetMissing = wb.sheet('Missing') || wb.addSheet('Missing');\n      // Remove default Sheet1 if present and unused\n      const defaultSheet = wb.sheet('Sheet1');\n      if (defaultSheet && defaultSheet.name() !== 'Exact' && defaultSheet.name() !== 'Missing') {\n        wb.deleteSheet(defaultSheet);\n      }\n\n      const exactHeaders = ['Pair','Client','Caregiver','Date','JOVIE_Time','Result_Time','Deviation'];\n      const missingHeaders = ['Pair','Client','Caregiver','Date','JOVIE_Time'];\n\n      const writeSheet = (sheet, headers, data) => {\n        // Headers\n        sheet.cell(1,1).value([headers]);\n        sheet.range(1,1,1,headers.length).style({ bold: true, fill: 'DDDDDD', horizontalAlignment: 'center' });\n        // Rows\n        data.forEach((row, idx) => {\n          const r = idx + 2;\n          headers.forEach((h, cidx) => {\n            const c = cidx + 1;\n            sheet.cell(r, c).value(row[h] == null ? '' : row[h]);\n          });\n        });\n        // Determine used range\n        const lastRow = (data.length || 0) + 1;\n        const lastCol = headers.length;\n        // Color Deviation column if present\n        const devColIdx = headers.indexOf('Deviation');\n        if (devColIdx !== -1) {\n          data.forEach((row, idx) => {\n            const r = idx + 2;\n            const jovie = row['JOVIE_Time'] || '';\n            const result = row['Result_Time'] || '';\n            const a = analyzeDeviation(jovie, result) || {};\n            const color = (a.color || '').toLowerCase();\n            let fill, extra = {};\n            if (color === 'green') fill = 'C6EFCE';\n            else if (color === 'orange') fill = 'FCE4D6';\n            else if (color === 'red') { fill = 'FFC7CE'; extra = { fontColor: '9C0006', bold: true }; }\n            if (fill) sheet.cell(r, devColIdx + 1).style({ fill, ...extra });\n          });\n        }\n        // Date number format if a Date column exists\n        const dateColIdx = headers.indexOf('Date');\n        if (dateColIdx !== -1 && data.length > 0) {\n          try { sheet.range(2, dateColIdx + 1, lastRow, dateColIdx + 1).style('numberFormat', 'yyyy-mm-dd'); } catch {}\n        }\n        // Borders around used range\n        try { sheet.range(1,1,lastRow,lastCol).style('border', 'thin'); } catch {}\n        // Freeze header row\n        try { sheet.freezePanes(1, 0); } catch {}\n        // Autosize columns\n        for (let i = 0; i < headers.length; i++) {\n          const header = headers[i];\n          const headerLen = String(header).length;\n          let maxLen = headerLen;\n          data.forEach(row => { const s = String(row[header] == null ? '' : row[header]); maxLen = Math.max(maxLen, s.length); });\n          const width = Math.min(60, maxLen + 2);\n          sheet.column(i + 1).width(width);\n        }\n      };\n\n      writeSheet(sheetExact, exactHeaders, exact);\n      writeSheet(sheetMissing, missingHeaders, missing);\n\n      const blob = await wb.outputAsync();\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'CaseConTimeCK.xlsx';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      return;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.warn('[TimeCK] xlsx-populate not available, falling back to SheetJS (no colors)', err);\n    }\n    // Always do a client-side Excel export with SheetJS; no backend dependency\n    try {\n      const mod = await import('xlsx');\n      const XLSXLib = mod && mod.default ? mod.default : mod;\n      const wb = XLSXLib.utils.book_new();\n      const wsExact = XLSXLib.utils.json_to_sheet(exact);\n      const wsMissing = XLSXLib.utils.json_to_sheet(missing);\n      // Auto-size columns based on content (headers + rows)\n      const calcCols = (rows) => {\n        const keys = rows && rows.length ? Object.keys(rows[0]) : [];\n        return keys.map((k) => {\n          const headerLen = String(k).length;\n          const maxCellLen = (rows || []).reduce((m, r) => {\n            const v = r && Object.prototype.hasOwnProperty.call(r, k) ? r[k] : '';\n            const s = v == null ? '' : String(v);\n            return Math.max(m, s.length);\n          }, 0);\n          // Add padding, clamp to a sane max\n          const wch = Math.min(60, Math.max(headerLen, maxCellLen) + 2);\n          return { wch };\n        });\n      };\n      wsExact['!cols'] = calcCols(exact);\n      wsMissing['!cols'] = calcCols(missing);\n      XLSXLib.utils.book_append_sheet(wb, wsExact, 'Exact');\n      XLSXLib.utils.book_append_sheet(wb, wsMissing, 'Missing');\n      XLSXLib.writeFile(wb, 'CaseConTimeCK.xlsx');\n      return;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.warn('[TimeCK] XLSX export failed, exporting CSV instead', err);\n    }\n    // Last resort: export combined CSV\n    try {\n      const combined = [\n        ...exact.map(r => ({ Table: 'Exact', ...r })),\n        ...missing.map(r => ({ Table: 'Missing', ...r })),\n      ];\n      downloadCSV('CaseConTimeCK.csv', combined);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('[TimeCK] CSV export failed', err);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"flex items-center justify-between gap-4 mb-4\">\n        <div className=\"flex gap-3\">\n          <button \n            className=\"bg-gray-300 text-gray-800 px-6 py-2 rounded font-semibold hover:bg-gray-400\" \n            onClick={handleExport}\n          >\n            Export\n          </button>\n          <button \n            className=\"bg-orange-500 text-white px-6 py-2 rounded font-semibold hover:bg-orange-600\" \n            onClick={() => { try { clearEditedValues(); clearDeviationMessages(); } catch {} if (typeof onClearResults === 'function') onClearResults(); }}\n          >\n            Clear Results\n          </button>\n        </div>\n      \n        <div className=\"text-sm text-gray-700\">\n          <span className=\"font-semibold\">Exact Matches:</span>{' '}\n          <span className=\"inline-block px-2 py-0.5 rounded bg-green-100 text-green-700 font-semibold mr-2\">{exactRows.length}</span>\n          <span className=\"font-semibold\">Missing:</span>{' '}\n          <button\n            type=\"button\"\n            className={`inline-block px-2 py-0.5 rounded font-semibold mr-2 ${showMissing ? 'bg-yellow-200 text-yellow-900' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`}\n            onClick={() => setShowMissing(v => !v)}\n            title=\"Click to view missing lines\"\n          >\n            {missingRows.length}\n          </button>\n          <span className=\"ml-2 mr-1 font-semibold\">Display:</span>\n          <div className=\"inline-flex border rounded overflow-hidden align-middle\">\n            <button\n              className={`px-2 py-0.5 text-xs font-semibold ${displayMode === '12h' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-100'}`}\n              onClick={() => setDisplayMode('12h')}\n            >12h</button>\n            <button\n              className={`px-2 py-0.5 text-xs font-semibold ${displayMode === '24h' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-100'}`}\n              onClick={() => setDisplayMode('24h')}\n            >24h</button>\n          </div>\n        </div>\n      </div>\n      <div className=\"overflow-x-auto border rounded bg-white mb-2 output-scroll\">\n        <table className=\"min-w-full text-sm\">\n          <thead className=\"bg-gray-200\">\n            <tr>\n              <th className=\"p-2 font-bold\">Line #</th>\n              <th className=\"p-2 font-bold\">Client</th>\n              <th className=\"p-2 font-bold\">Caregiver</th>\n              <th className=\"p-2 font-bold\">Time</th>\n              <th className=\"p-2 font-bold\">Result</th>\n            </tr>\n          </thead>\n          <tbody>\n            {exactRows.length === 0 ? (\n              <tr>\n                <td className=\"p-4 text-center text-gray-500\" colSpan={5}>No exact matches yet. Run Compare to generate results.</td>\n              </tr>\n            ) : (\n              exactRows.map((row, idx) => {\n                const originalIndex = rows.indexOf(row);\n                const currentValue = (originalIndex in editedValues ? editedValues[originalIndex] : undefined) || row.result || row.timeChecked || '';\n                const refTimeStr = formatTime12hRange(getTimeFromJovie(row)) || '';\n                const analysis = analyzeDeviation(refTimeStr, currentValue);\n                const tdColor = analysis.color === 'green' ? 'bg-green-50' : analysis.color === 'red' ? 'bg-red-200' : analysis.color === 'orange' ? 'bg-orange-50' : '';\n                const badgeColor = analysis.color === 'green' ? 'text-green-700' : analysis.color === 'red' ? 'text-red-800' : analysis.color === 'orange' ? 'text-orange-700' : 'text-gray-600';\n                const handlePaste = (e) => {\n                  try {\n                    const text = (e.clipboardData || window.clipboardData).getData('text');\n                    if (!text) return;\n                    e.preventDefault();\n                    // Try 12h with optional minutes and am/pm\n                    let m = text.match(/\\b(\\d{1,2})(?::(\\d{2}))?\\s*([ap]m)\\b\\s*[-–]\\s*\\b(\\d{1,2})(?::(\\d{2}))?\\s*([ap]m)\\b/i);\n                    if (m) {\n                      const start = toMinutes12h(m[1], m[2] ?? '00', m[3]);\n                      let end = toMinutes12h(m[4], m[5] ?? '00', m[6]);\n                      if (end <= start) end += 24 * 60;\n                      const saved = `${minutesTo12hClock(start)} - ${minutesTo12hClock(end)}`;\n                      const shown = displayMode === '24h'\n                        ? `${minutesTo24h(start)} - ${minutesTo24h(end)}`\n                        : saved;\n                      if (e.currentTarget) e.currentTarget.textContent = shown;\n                      if (originalIndex >= 0) setEditedValue(originalIndex, saved);\n                      if (typeof onResultEdit === 'function' && originalIndex >= 0) onResultEdit(originalIndex, saved);\n                      return;\n                    }\n                    // Try 24h HH:MM - HH:MM\n                    m = text.match(/\\b(\\d{1,2}):(\\d{2})\\b\\s*[-–]\\s*\\b(\\d{1,2}):(\\d{2})\\b/);\n                    if (m) {\n                      const toMin24 = (h, mm) => (Math.min(23, Math.max(0, parseInt(h, 10))) * 60) + (Math.min(59, Math.max(0, parseInt(mm, 10))));\n                      const start = toMin24(m[1], m[2]);\n                      let end = toMin24(m[3], m[4]);\n                      if (end <= start) end += 24 * 60;\n                      const saved = `${minutesTo12hClock(start)} - ${minutesTo12hClock(end)}`;\n                      const shown = displayMode === '24h'\n                        ? `${minutesTo24h(start)} - ${minutesTo24h(end)}`\n                        : saved;\n                      if (e.currentTarget) e.currentTarget.textContent = shown;\n                      if (originalIndex >= 0) setEditedValue(originalIndex, saved);\n                      if (typeof onResultEdit === 'function' && originalIndex >= 0) onResultEdit(originalIndex, saved);\n                      return;\n                    }\n                    // Fallback: do nothing\n                  } catch {}\n                };\n                const handleKeyDown = async (e) => {\n                  try {\n                    const isPasteShortcut = (e.ctrlKey || e.metaKey) && (e.key === 'v' || e.key === 'V');\n                    if (!isPasteShortcut) return;\n                    // Prefer Clipboard API if available\n                    if (navigator.clipboard && navigator.clipboard.readText) {\n                      const text = await navigator.clipboard.readText();\n                      if (!text) return;\n                      e.preventDefault();\n                      // Try 12h with optional minutes and am/pm\n                      let m = text.match(/\\b(\\d{1,2})(?::(\\d{2}))?\\s*([ap]m)\\b\\s*[-–]\\s*\\b(\\d{1,2})(?::(\\d{2}))?\\s*([ap]m)\\b/i);\n                      if (m) {\n                        const start = toMinutes12h(m[1], m[2] ?? '00', m[3]);\n                        let end = toMinutes12h(m[4], m[5] ?? '00', m[6]);\n                        if (end <= start) end += 24 * 60;\n                        const saved = `${minutesTo12hClock(start)} - ${minutesTo12hClock(end)}`;\n                        const shown = displayMode === '24h'\n                          ? `${minutesTo24h(start)} - ${minutesTo24h(end)}`\n                          : saved;\n                        if (e.currentTarget) e.currentTarget.textContent = shown;\n                        if (originalIndex >= 0) setEditedValue(originalIndex, saved);\n                        if (typeof onResultEdit === 'function' && originalIndex >= 0) onResultEdit(originalIndex, saved);\n                        return;\n                      }\n                      // Try 24h HH:MM - HH:MM\n                      m = text.match(/\\b(\\d{1,2}):(\\d{2})\\b\\s*[-–]\\s*\\b(\\d{1,2}):(\\d{2})\\b/);\n                      if (m) {\n                        const toMin24 = (h, mm) => (Math.min(23, Math.max(0, parseInt(h, 10))) * 60) + (Math.min(59, Math.max(0, parseInt(mm, 10))));\n                        const start = toMin24(m[1], m[2]);\n                        let end = toMin24(m[3], m[4]);\n                        if (end <= start) end += 24 * 60;\n                        const saved = `${minutesTo12hClock(start)} - ${minutesTo12hClock(end)}`;\n                        const shown = displayMode === '24h'\n                          ? `${minutesTo24h(start)} - ${minutesTo24h(end)}`\n                          : saved;\n                        if (e.currentTarget) e.currentTarget.textContent = shown;\n                        if (originalIndex >= 0) setEditedValue(originalIndex, saved);\n                        if (typeof onResultEdit === 'function' && originalIndex >= 0) onResultEdit(originalIndex, saved);\n                        return;\n                      }\n                    }\n                  } catch {}\n                };\n                return (\n                <tr key={idx}>\n                  <td className=\"p-2\">{row.line || idx + 1}</td>\n                  <td className=\"p-2\">{row.client}</td>\n                  <td className=\"p-2\">{row.caregiver}</td>\n                  <td className=\"p-2\">{formatDisplayRange(getTimeFromJovie(row), displayMode)}</td>\n                  <td className={`p-2 ${tdColor}`}>\n                    <div\n                      role=\"textbox\"\n                      contentEditable\n                      suppressContentEditableWarning\n                      onPaste={handlePaste}\n                      onKeyDown={handleKeyDown}\n                      onFocus={(e) => selectAllIn(e.currentTarget)}\n                      onClick={(e) => selectAllIn(e.currentTarget)}\n                      className=\"min-w-[180px] px-2 py-1 border rounded focus:outline-none focus:ring-2 focus:ring-orange-400\"\n                    >\n                      {currentValue ? formatDisplayRange(currentValue, displayMode) : ''}\n                    </div>\n                    {analysis.badge ? (\n                      <div className={`mt-1 text-xs font-semibold ${badgeColor}`}>{analysis.badge}</div>\n                    ) : null}\n                  </td>\n                </tr>\n              );})\n            )}\n          </tbody>\n        </table>\n      </div>\n      {showMissing && (\n        <div className=\"mt-4\">\n          <div className=\"text-sm text-gray-700 font-semibold mb-2\">Missing items</div>\n          <div className=\"overflow-x-auto border rounded bg-white output-scroll\">\n            <table className=\"min-w-full text-sm\">\n              <thead className=\"bg-gray-200\">\n                <tr>\n                  <th className=\"p-2 font-bold\">Line #</th>\n                  <th className=\"p-2 font-bold\">Client</th>\n                  <th className=\"p-2 font-bold\">Caregiver</th>\n                  <th className=\"p-2 font-bold\">Date</th>\n                  <th className=\"p-2 font-bold\">Time</th>\n                  <th className=\"p-2 font-bold\">Source</th>\n                  <th className=\"p-2 font-bold\">Type</th>\n                </tr>\n              </thead>\n              <tbody>\n                {missingRows.length === 0 ? (\n                  <tr>\n                    <td className=\"p-4 text-center text-gray-500\" colSpan={7}>No missing items.</td>\n                  </tr>\n                ) : (\n                  missingRows.map((row, idx) => (\n                    <tr key={idx}>\n                      <td className=\"p-2\">{row.line || idx + 1}</td>\n                      <td className=\"p-2\">{row.client}</td>\n                      <td className=\"p-2\">{row.caregiver}</td>\n                      <td className=\"p-2\">{row.date || ''}</td>\n                      <td className=\"p-2\">{formatDisplayRange(getTimeFromJovie(row), displayMode)}</td>\n                      <td className=\"p-2\">{row.source || ''}</td>\n                      <td className=\"p-2\">{row.match_type || row.tag || ''}</td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TimeCK;\n// Backward-compatible named export if imported elsewhere\nexport const ResultsPanel = TimeCK;","import { create } from 'zustand';\n\n/**\n * Exchange Store\n * Acts as a central hub for data exchange between modules\n * Each module can publish data to specific channels and subscribe to data from other modules\n */\n\nexport const useExchangeStore = create((set, get) => ({\n  // Data channels\n  channels: {\n    buca: null,      // BUCA data\n    jovie: null,     // JOVIE data\n    uids: null,      // UID mappings\n    storage: null    // Persistent storage\n  },\n  \n  // Publish data to a channel\n  publish: (channel, data) => {\n    set(state => ({\n      channels: {\n        ...state.channels,\n        [channel]: {\n          ...state.channels[channel],\n          ...data,\n          timestamp: new Date().toISOString()\n        }\n      }\n    }));\n  },\n  \n  // Subscribe to data from a channel\n  subscribe: (channel, selector = state => state) => {\n    return (callback) => {\n      const listener = (state) => {\n        const data = state.channels[channel];\n        if (data) {\n          callback(selector(data), data);\n        }\n      };\n      \n      // Return unsubscribe function\n      return useExchangeStore.subscribe(listener, selector);\n    };\n  },\n  \n  // Clear a channel\n  clearChannel: (channel) => {\n    set(state => ({\n      channels: {\n        ...state.channels,\n        [channel]: null\n      }\n    }));\n  },\n  \n  // Get current data from a channel\n  getChannelData: (channel) => {\n    return get().channels[channel];\n  }\n}));\n\n// Initialize the store\nif (typeof window !== 'undefined') {\n  window.exchangeStore = useExchangeStore;\n}\n"],"names":["normalizeName","name","trim","replace","toLowerCase","TimeCK","_ref","rows","onClearResults","onExport","onResultEdit","exchange","useExchangeStore","displayMode","setDisplayMode","React","editedValues","useTimeckStore","s","setEditedValue","clearEditedValues","clearDeviationMessages","setDeviationMessages","DISPLAY_MODE_STORAGE_KEY","selectAllIn","el","range","document","createRange","selectNodeContents","sel","window","getSelection","removeAllRanges","addRange","saved","localStorage","getItem","setItem","jovieData","getChannelData","jovieRows","Array","isArray","nameMap","uidMap","mastMap","mastDateMap","Map","hasTime","x","Boolean","timeRange","time","start_time","end_time","extractDate","date","service_date","SERVICE_DATE","Date","r","nameKey","client","caregiver","prevName","get","set","cUID","clientUID","client_uid","CLIENT_UID","gUID","caregiverUID","caregiver_uid","CAREGIVER_UID","uidKey","prevUid","mast","mast_uid","MAST_UID","master_uid","MASTER_UID","pair_uid","pairUID","mastKey","String","prevMast","mdKey","prevMd","extractMast","row","toMinutes12h","h","m","ampm","hh","parseInt","mm","ap","minutesToHhMm","mins","a","Math","abs","floor","parseTimeRangeFlexible","str","match","_m$","_m$2","start","end","toMin24","min","max","analyzeDeviation","refStr","valStr","ref","val","badge","color","severity","ds","de","details","parts","push","join","minutesTo24h","pad","n","minutesTo12hClock","formatDisplayRange","srcStr","mode","parsed","formatTime12hRange","extractTimeRange","undefined","getTimeFromJovie","_row$caregivers","fallback","clientUid","client_id","clientId","uid_client","CLIENTID","CLIENT","extractClientUID","caregiverUid","caregiver_id","caregiverId","uid_caregiver","CAREGIVERID","CAREGIVER","extractCaregiverUID","u","t","md","clients","caregivers","cg","split","map","filter","c","g","k","jr","console","warn","exactRows","tag","match_type","confidence","missingRows","source","showMissing","setShowMissing","buildExportRows","exact","jovie","result","originalIndex","indexOf","timeChecked","getSavedValue","Pair","pair","uid","UID","Client","Caregiver","JOVIE_Time","Result_Time","Deviation","deviationMessageMap","message","missing","currentValue","refTimeStr","downloadCSV","filename","rowsArr","length","headers","Object","keys","csv","v","test","esc","blob","Blob","type","url","URL","createObjectURL","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","_jsxs","children","className","_jsx","onClick","async","xpMod","XlsxPopulate","default","wb","fromBlankAsync","sheetExact","sheet","addSheet","sheetMissing","defaultSheet","deleteSheet","missingHeaders","writeSheet","data","cell","value","style","bold","fill","horizontalAlignment","forEach","idx","cidx","lastRow","lastCol","devColIdx","extra","fontColor","dateColIdx","freezePanes","i","header","maxLen","width","column","outputAsync","err","mod","XLSXLib","utils","book_new","wsExact","json_to_sheet","wsMissing","calcCols","headerLen","maxCellLen","reduce","prototype","hasOwnProperty","call","wch","book_append_sheet","writeFile","combined","Table","error","title","colSpan","analysis","tdColor","badgeColor","line","role","contentEditable","suppressContentEditableWarning","onPaste","e","text","clipboardData","getData","preventDefault","_m$3","_m$4","shown","currentTarget","textContent","onKeyDown","ctrlKey","metaKey","key","navigator","clipboard","readText","_m$5","_m$6","onFocus","ResultsPanel","create","channels","buca","uids","storage","publish","channel","state","timestamp","toISOString","subscribe","selector","arguments","callback","clearChannel","exchangeStore"],"sourceRoot":""}